'\" t
.\"     Title: dracut.cmdline
.\"    Author: [see the "AUTHOR" section]
.\" Generator: DocBook XSL Stylesheets v1.77.1 <http://docbook.sf.net/>
.\"      Date: 06/29/2012
.\"    Manual: dracut
.\"    Source: dracut
.\"  Language: English
.\"
.TH "DRACUT\&.CMDLINE" "7" "06/29/2012" "dracut" "dracut"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
dracut.cmdline \- dracut kernel command line options
.SH "DESCRIPTION"
.sp
The root device used by the kernel is specified in the boot configuration file on the kernel command line, as always\&.
.sp
The traditional \fIroot=/dev/sda1\fR style device specification is allowed, but not encouraged\&. The root device should better be identified by LABEL or UUID\&. If a label is used, as in \fIroot=LABEL=<label_of_root>\fR the initramfs will search all available devices for a filesystem with the appropriate label, and mount that device as the root filesystem\&. \fIroot=UUID=<uuidnumber>\fR will mount the partition with that UUID as the root filesystem\&.
.sp
In the following all kernel command line parameters, which are processed by dracut, are described\&.
.sp
"rd\&.*" parameters mentioned without "=" are boolean parameters\&. They can be turned on/off by setting them to {0|1}\&. If the assignment with "=" is missing "=1" is implied\&. For example \fIrd\&.info\fR can be turned off with \fIrd\&.info=0\fR or turned on with \fIrd\&.info=1\fR or \fIrd\&.info\fR\&. The last value in the kernel command line is the value, which is honored\&.
.SS "Standard"
.PP
\fBinit=\fR\fI<path to real init>\fR
.RS 4
specify the path to the init programm to be started after the initramfs has finished
.RE
.PP
\fBroot=\fR\fI<path to blockdevice>\fR
.RS 4
specify the block device to use as the root filesystem\&.
.sp
E\&.g\&.:
.sp
.if n \{\
.RS 4
.\}
.nf
root=/dev/sda1
root=/dev/disk/by\-path/pci\-0000:00:1f\&.1\-scsi\-0:0:1:0\-part1
root=/dev/disk/by\-label/Root
root=LABEL=Root
root=/dev/disk/by\-uuid/3f5ad593\-4546\-4a94\-a374\-bcfb68aa11f7
root=UUID=3f5ad593\-4546\-4a94\-a374\-bcfb68aa11f7
root=PARTUUID=3f5ad593\-4546\-4a94\-a374\-bcfb68aa11f7
.fi
.if n \{\
.RE
.\}
.RE
.PP
\fBrootfstype=\fR\fI<filesystem type>\fR
.RS 4
"auto" if not specified, e\&.g\&.:
.sp
.if n \{\
.RS 4
.\}
.nf
rootfstype=ext3
.fi
.if n \{\
.RE
.\}
.RE
.PP
\fBrootflags=\fR\fI<mount options>\fR
.RS 4
specify additional mount options for the root filesystem\&. If not set,
\fI/etc/fstab\fR
of the real root will be parsed for special mount options and mounted accordingly\&.
.RE
.PP
\fBrd\&.fstab=0\fR
.RS 4
do not honor special mount options for the root filesystem found in
\fI/etc/fstab\fR
of the real root\&.
.RE
.sp
\fBresume=\fR\fI<path to resume partition>\fR
.sp
+ E\&.g\&.:
.sp
+
.sp
.if n \{\
.RS 4
.\}
.nf
resume=/dev/disk/by\-path/pci\-0000:00:1f\&.1\-scsi\-0:0:1:0\-part1
resume=/dev/disk/by\-uuid/3f5ad593\-4546\-4a94\-a374\-bcfb68aa11f7
resume=UUID=3f5ad593\-4546\-4a94\-a374\-bcfb68aa11f7
.fi
.if n \{\
.RE
.\}
.SS "Misc"
.PP
\fBrd\&.driver\&.blacklist=\fR\fI<drivername>[,<drivername>,\&...]\fR
.RS 4
do not load kernel module <drivername>\&. This parameter can be specified multiple times\&.
.RE
.PP
\fBrd\&.driver\&.pre=\fR\fI<drivername>[,<drivername>,\&...]\fR
.RS 4
force loading kernel module <drivername>\&. This parameter can be specified multiple times\&.
.RE
.PP
\fBrd\&.driver\&.post=\fR\fI<drivername>[,<drivername>,\&...]\fR
.RS 4
force loading kernel module <drivername> after all automatic loading modules have been loaded\&. This parameter can be specified multiple times\&.
.RE
.SS "Debug"
.PP
\fBrd\&.info\fR
.RS 4
print informational output though "quiet" is set
.RE
.PP
\fBrd\&.shell\fR
.RS 4
allow dropping to a shell, if root mounting fails
.RE
.PP
\fBrd\&.debug\fR
.RS 4
set \-x for the dracut shell and logs to dmesg, console and
\fI/run/initramfs/init\&.log\fR
.RE
.PP
\fBrd\&.break\fR
.RS 4
drop to a shell at the end
.RE
.PP
\fBrd\&.break=\fR\fI{cmdline|pre\-udev|pre\-trigger|initqueue|pre\-mount|mount|pre\-pivot|cleanup}\fR
.RS 4
drop to a shell on defined breakpoint
.RE
.PP
\fBrd\&.udev\&.info\fR
.RS 4
set udev to loglevel info
.RE
.PP
\fBrd\&.udev\&.debug\fR
.RS 4
set udev to loglevel debug
.RE
.SS "I18N"
.PP
\fBvconsole\&.keymap=\fR\fI<keymap base file name>\fR
.RS 4
keyboard translation table loaded by loadkeys; taken from keymaps directory; will be written as KEYMAP to
\fI/etc/vconsole\&.conf\fR
in the initramfs, e\&.g\&.:
.sp
.if n \{\
.RS 4
.\}
.nf
vconsole\&.keymap=de\-latin1\-nodeadkeys
.fi
.if n \{\
.RE
.\}
.RE
.PP
\fBvconsole\&.keymap\&.ext=\fR\fI<list of keymap base file names>\fR
.RS 4
list of extra keymaps to bo loaded (sep\&. by space); will be written as EXT_KEYMAP to
\fI/etc/vconsole\&.conf\fR
in the initramfs
.RE
.PP
\fBvconsole\&.unicode\fR[=\fI{0|1}\fR]
.RS 4
boolean, indicating UTF\-8 mode; will be written as UNICODE to
\fI/etc/vconsole\&.conf\fR
in the initramfs
.RE
.PP
\fBvconsole\&.font=\fR\fI<font base file name>\fR
.RS 4
console font; taken from consolefonts directory; will be written as FONT to
\fI/etc/vconsole\&.conf\fR
in the initramfs; e\&.g\&.:
.sp
.if n \{\
.RS 4
.\}
.nf
vconsole\&.font=LatArCyrHeb\-16
.fi
.if n \{\
.RE
.\}
.RE
.PP
\fBvconsole\&.font\&.map=\fR\fI<console map base file name>\fR
.RS 4
see description of
\fI\-m\fR
parameter in setfont manual; taken from consoletrans directory; will be written as FONT_MAP to
\fI/etc/vconsole\&.conf\fR
in the initramfs
.RE
.PP
\fBvconsole\&.font\&.unimap=\fR\fI<unicode table base file name>\fR
.RS 4
see description of
\fI\-u\fR
parameter in setfont manual; taken from unimaps directory; will be written as FONT_UNIMAP to
\fI/etc/vconsole\&.conf\fR
in the initramfs
.RE
.PP
\fBlocale\&.LANG=\fR\fI<locale>\fR
.RS 4
taken from the environment; if no UNICODE is defined we set its value in basis of LANG value (whether it ends with "\&.utf8" (or similar) or not); will be written as LANG to
\fI/etc/locale\&.conf\fR
in the initramfs; e\&.g\&.:
.sp
.if n \{\
.RS 4
.\}
.nf
locale\&.LANG=pl_PL\&.utf8
.fi
.if n \{\
.RE
.\}
.RE
.PP
\fBlocale\&.LC_ALL=\fR\fI<locale>\fR
.RS 4
taken from the environment; will be written as LC_ALL to
\fI/etc/locale\&.conf\fR
in the initramfs
.RE
.SS "LVM"
.PP
\fBrd\&.lvm=0\fR
.RS 4
disable LVM detection
.RE
.PP
\fBrd\&.lvm\&.vg=\fR\fI<volume group name>\fR
.RS 4
only activate the volume groups with the given name\&. rd\&.lvm\&.vg can be specified multiple times on the kernel command line\&.
.RE
.PP
\fBrd\&.lvm\&.lv=\fR\fI<logical volume name>\fR
.RS 4
only activate the logical volumes with the given name\&. rd\&.lvm\&.lv can be specified multiple times on the kernel command line\&.
.RE
.PP
\fBrd\&.lvm\&.conf=0\fR
.RS 4
remove any
\fI/etc/lvm/lvm\&.conf\fR, which may exist in the initramfs
.RE
.SS "crypto LUKS"
.PP
\fBrd\&.luks=0\fR
.RS 4
disable crypto LUKS detection
.RE
.PP
\fBrd\&.luks\&.uuid=\fR\fI<luks uuid>\fR
.RS 4
only activate the LUKS partitions with the given UUID\&. Any "luks\-" of the LUKS UUID is removed before comparing to
\fI<luks uuid>\fR\&. The comparisons also matches, if
\fI<luks uuid>\fR
is only the beginning of the LUKS UUID, so you don\(cqt have to specify the full UUID\&. This parameter can be specified multiple times\&.
.RE
.PP
\fBrd\&.luks\&.allow\-discards=\fR\fI<luks uuid>\fR
.RS 4
Allow using of discards (TRIM) requests for LUKS partitions with the given UUID\&. Any "luks\-" of the LUKS UUID is removed before comparing to
\fI<luks uuid>\fR\&. The comparisons also matches, if
\fI<luks uuid>\fR
is only the beginning of the LUKS UUID, so you don\(cqt have to specify the full UUID\&. This parameter can be specified multiple times\&.
.RE
.PP
**rd\&.luks\&.allow\-discards
.RS 4
Allow using of discards (TRIM) requests on all LUKS partitions\&.
.RE
.PP
\fBrd\&.luks\&.crypttab=0\fR
.RS 4
do not check, if LUKS partition is in
\fI/etc/crypttab\fR
.RE
.SS "crypto LUKS \- key on removable device support"
.PP
\fBrd\&.luks\&.key=\fR\fI<keypath>:<keydev>:<luksdev>\fR
.RS 4

\fIkeypath\fR
is a path to key file to look for\&. It\(cqs REQUIRED\&. When
\fIkeypath\fR
ends with
\fI\&.gpg\fR
it\(cqs considered to be key encrypted symmetrically with GPG\&. You will be prompted for password on boot\&. GPG support comes with
\fIcrypt\-gpg\fR
module which needs to be added explicitly\&.
.sp
\fIkeydev\fR
is a device on which key file resides\&. It might be kernel name of devices (should start with "/dev/"), UUID (prefixed with "UUID=") or label (prefix with "LABEL=")\&. You don\(cqt have to specify full UUID\&. Just its beginning will suffice, even if its ambiguous\&. All matching devices will be probed\&. This parameter is recommended, but not required\&. If not present, all block devices will be probed, which may significantly increase boot time\&.
.sp
If
\fIluksdev\fR
is given, the specified key will only be applied for that LUKS device\&. Possible values are the same as for
\fIkeydev\fR\&. Unless you have several LUKS devices, you don\(cqt have to specify this parameter\&. The simplest usage is:
.sp
.if n \{\
.RS 4
.\}
.nf
rd\&.luks\&.key=/foo/bar\&.key
.fi
.if n \{\
.RE
.\}
.sp
As you see, you can skip colons in such a case\&.
.RE
.SS "MD RAID"
.PP
\fBrd\&.md=0\fR
.RS 4
disable MD RAID detection
.RE
.PP
\fBrd\&.md\&.imsm=0\fR
.RS 4
disable MD RAID for imsm/isw raids, use DM RAID instead
.RE
.PP
\fBrd\&.md\&.ddf=0\fR
.RS 4
disable MD RAID for SNIA ddf raids, use DM RAID instead
.RE
.PP
\fBrd\&.md\&.conf=0\fR
.RS 4
ignore mdadm\&.conf included in initramfs
.RE
.PP
\fBrd\&.md\&.waitclean=1\fR
.RS 4
wait for any resync, recovery, or reshape activity to finish before continuing
.RE
.PP
\fBrd\&.md\&.uuid=\fR\fI<md raid uuid>\fR
.RS 4
only activate the raid sets with the given UUID\&. This parameter can be specified multiple times\&.
.RE
.SS "DM RAID"
.PP
\fBrd\&.dm=0\fR
.RS 4
disable DM RAID detection
.RE
.PP
\fBrd\&.dm\&.uuid=\fR\fI<dm raid uuid>\fR
.RS 4
only activate the raid sets with the given UUID\&. This parameter can be specified multiple times\&.
.RE
.SS "FIPS"
.PP
\fBrd\&.fips\fR
.RS 4
enable FIPS
.RE
.PP
\fBboot=\fR\fI<boot device>\fR
.RS 4
specify the device, where /boot is located\&. e\&.g\&.
.sp
.if n \{\
.RS 4
.\}
.nf
boot=/dev/sda1
boot=/dev/disk/by\-path/pci\-0000:00:1f\&.1\-scsi\-0:0:1:0\-part1
boot=UUID=<uuid>
boot=LABEL=<label>
.fi
.if n \{\
.RE
.\}
.RE
.PP
\fBrd\&.fips\&.skipkernel\fR
.RS 4
skip checksum check of the kernel image\&. Useful, if the kernel image is not in a separate boot partition\&.
.RE
.SS "Network"
.PP
\fBip=\fR\fI{dhcp|on|any|dhcp6|auto6|ibft}\fR
.RS 4
.PP
dhcp|on|any
.RS 4
get ip from dhcp server from all interfaces\&. If root=dhcp, loop sequentially through all interfaces (eth0, eth1, \&...) and use the first with a valid DHCP root\-path\&.
.RE
.PP
auto6
.RS 4
IPv6 autoconfiguration
.RE
.PP
dhcp6
.RS 4
IPv6 DHCP
.RE
.PP
ibft
.RS 4
iBFT autoconfiguration
.RE
.RE
.PP
\fBip=\fR\fI<interface>\fR:\fI{dhcp|on|any|dhcp6|auto6}\fR[:[\fI<mtu>\fR][:\fI<macaddr>\fR]]
.RS 4
This parameter can be specified multiple times\&.
.PP
dhcp|on|any|dhcp6
.RS 4
get ip from dhcp server on a specific interface
.RE
.PP
auto6
.RS 4
do IPv6 autoconfiguration
.RE
.PP
<macaddr>
.RS 4
optionally set <macaddr> on the <interface>
.RE
.RE
.PP
\fBip=\fR\fI<client\-IP>\fR:\fI<server\-IP>\fR:\fI<gateway\-IP>\fR:\fI<netmask>\fR:\fI<client_hostname>\fR:\fI<interface>\fR:\fI{none|off|dhcp|on|any|dhcp6|auto6|ibft}\fR[:[\fI<mtu>\fR][:\fI<macaddr>\fR]]
.RS 4
explicit network configuration\&. If you want do define a IPv6 address, put it in brackets (e\&.g\&. [2001:DB8::1])\&. This parameter can be specified multiple times\&.
.PP
<macaddr>
.RS 4
optionally set <macaddr> on the <interface>
.RE
.RE
.PP
\fBifname=\fR\fI<interface>\fR:\fI<MAC>\fR
.RS 4
Assign network device name <interface> (ie eth0) to the NIC with MAC <MAC>\&. Note: If you use this option you
\fImust\fR
specify an ifname= argument for all interfaces used in ip= or fcoe= arguments\&. However, if the interface in ip= or fcoe= is a bridge, bonding or vlan interface, you should specify an ifname= for
\fIeach\fR
of its underlying interfaces\&. This parameter can be specified multiple times\&.
.RE
.PP
\fBbootdev=\fR\fI<interface>\fR
.RS 4
specify network interface to use routing and netroot information from\&. Required if multiple ip= lines are used\&.
.RE
.PP
\fBnameserver=\fR\fI<IP>\fR [\fBnameserver=\fR\fI<IP>\fR \&...]
.RS 4
specify nameserver(s) to use
.RE
.PP
\fBbiosdevname=0\fR
.RS 4
boolean, turn off biosdevname network interface renaming
.RE
.PP
\fBvlan=\fR\fB\fI<vlanname>\fR\fR\fB:\fR\fB\fI<phydevice>\fR\fR
.RS 4
Setup vlan device named <vlanname> on <phydeivce>\&. We support the four styles of vlan names: VLAN_PLUS_VID (vlan0005), VLAN_PLUS_VID_NO_PAD (vlan5), DEV_PLUS_VID (eth0\&.0005), DEV_PLUS_VID_NO_PAD (eth0\&.5)
.RE
.PP
\fBbond=\fR\fB\fI<bondname>\fR\fR\fB[:\fR\fB\fI<bondslaves>\fR\fR\fB:[:\fR\fB\fI<options>\fR\fR\fB]]\fR
.RS 4
Setup bonding device <bondname> on top of <bondslaves>\&. <bondslaves> is a comma\-separated list of physical (ethernet) interfaces\&. <options> is a comma\-separated list on bonding options (modinfo bonding for details) in format compatible with initscripts\&. If <options> includes multi\-valued arp_ip_target option, then its values should be separated by semicolon\&. Bond without parameters assumes bond=bond0:eth0,eth1:mode=balance\-rr
.RE
.PP
\fBbridge=\fR\fB\fI<bridgename>\fR\fR\fB:\fR\fB\fI<ethnames>\fR\fR
.RS 4
Setup bridge <bridgename> with <ethnames>\&. <ethnames> is a comma\-separated list of physical (ethernet) interfaces\&. Bridge without parameters assumes bridge=br0:eth0
.RE
.SS "NFS"
.PP
\fBroot=\fR\fI<root\-dir>\fR[:\fI<nfs\-options>\fR]
.RS 4
mount nfs share from <server\-ip>:/<root\-dir>, if no server\-ip is given, use dhcp next_server\&. if server\-ip is an IPv6 address it has to be put in brackets, e\&.g\&. [2001:DB8::1]\&. NFS options can be appended with the prefix ":" or "," and are seperated by ","\&.
.RE
.PP
\fBroot=\fRnfs:\fI<root\-dir>\fR[:\fI<nfs\-options>\fR], \fBroot=\fRnfs4:\fI<root\-dir>\fR[:\fI<nfs\-options>\fR], \fBroot=\fR\fI{dhcp|dhcp6}\fR
.RS 4
root=dhcp alone directs initrd to look at the DHCP root\-path where NFS options can be specified\&.
.sp
.if n \{\
.RS 4
.\}
.nf
    root\-path=<server\-ip>:<root\-dir>[,<nfs\-options>]
    root\-path=nfs:<server\-ip>:<root\-dir>[,<nfs\-options>]
    root\-path=nfs4:<server\-ip>:<root\-dir>[,<nfs\-options>]
.fi
.if n \{\
.RE
.\}
.RE
.PP
\fBroot=\fR\fI/dev/nfs\fR nfsroot=\fI<root\-dir>\fR[:\fI<nfs\-options>\fR]
.RS 4

\fIDeprecated!\fR
kernel Documentation_/filesystems/nfsroot\&.txt_ defines this method\&. This is supported by dracut, but not recommended\&.
.RE
.PP
\fBrd\&.nfs\&.domain=\fR\fI<NFSv4 domain name>\fR
.RS 4
Set the NFSv4 domain name\&. Will overwrite the settings in
\fI/etc/idmap\&.conf\fR\&.
.RE
.SS "iSCSI"
.PP
\fBroot=\fRiscsi:[\fI<username>\fR:\fI<password>\fR[:\fI<reverse>\fR:\fI<password>\fR]@][\fI<servername>\fR]:[\fI<protocol>\fR]:[\fI<port>\fR][:[\fI<iscsi_iface_name>\fR]:[\fI<netdev_name>\fR]]:[\fI<LUN>\fR]:\fI<targetname>\fR
.RS 4
protocol defaults to "6", LUN defaults to "0"\&. If the "servername" field is provided by BOOTP or DHCP, then that field is used in conjunction with other associated fields to contact the boot server in the Boot stage\&. However, if the "servername" field is not provided, then the "targetname" field is then used in the Discovery Service stage in conjunction with other associated fields\&. See
\m[blue]\fBrfc4173\fR\m[]\&\s-2\u[1]\d\s+2\&. e\&.g\&.:
.sp
.if n \{\
.RS 4
.\}
.nf
root=iscsi:192\&.168\&.50\&.1::::iqn\&.2009\-06\&.dracut:target0
.fi
.if n \{\
.RE
.\}
.sp
If servername is an IPv6 address, it has to be put in brackets\&. e\&.g\&.:
.sp
.if n \{\
.RS 4
.\}
.nf
root=iscsi:[2001:DB8::1]::::iqn\&.2009\-06\&.dracut:target0
.fi
.if n \{\
.RE
.\}
.RE
.PP
\fBroot=\fR\fI???\fR \fBnetroot=\fRiscsi:[\fI<username>\fR:\fI<password>\fR[:\fI<reverse>\fR:\fI<password>\fR]@][\fI<servername>\fR]:[\fI<protocol>\fR]:[\fI<port>\fR][:[\fI<iscsi_iface_name>\fR]:[\fI<netdev_name>\fR]]:[\fI<LUN>\fR]:\fI<targetname>\fR \&...
.RS 4
multiple netroot options allow setting up multiple iscsi disks\&. e\&.g\&.:
.sp
.if n \{\
.RS 4
.\}
.nf
root=UUID=12424547
netroot=iscsi:192\&.168\&.50\&.1::::iqn\&.2009\-06\&.dracut:target0
netroot=iscsi:192\&.168\&.50\&.1::::iqn\&.2009\-06\&.dracut:target1
.fi
.if n \{\
.RE
.\}
.sp
If servername is an IPv6 address, it has to be put in brackets\&. e\&.g\&.:
.sp
.if n \{\
.RS 4
.\}
.nf
netroot=iscsi:[2001:DB8::1]::::iqn\&.2009\-06\&.dracut:target0
.fi
.if n \{\
.RE
.\}
.RE
.PP
\fBroot=\fR\fI???\fR \fBrd\&.iscsi\&.initiator=\fR\fI<initiator>\fR \fBrd\&.iscsi\&.target\&.name=\fR\fI<target name>\fR \fBrd\&.iscsi\&.target\&.ip=\fR\fI<target ip>\fR \fBrd\&.iscsi\&.target\&.port=\fR\fI<target port>\fR \fBrd\&.iscsi\&.target\&.group=\fR\fI<target group>\fR \fBrd\&.iscsi\&.username=\fR\fI<username>\fR \fBrd\&.iscsi\&.password=\fR\fI<password>\fR \fBrd\&.iscsi\&.in\&.username=\fR\fI<in username>\fR \fBrd\&.iscsi\&.in\&.password=\fR\fI<in password>\fR
.RS 4
manually specify all iscsistart parameter (see
\fBiscsistart\ \&\-\-help\fR)
.RE
.PP
\fBroot=\fR\fI???\fR \fBnetroot=\fRiscsi \fBrd\&.iscsi\&.firmware=1\fR
.RS 4
will read the iscsi parameter from the BIOS firmware
.RE
.PP
\fBrd\&.iscsi\&.param=\fR\fI<param>\fR
.RS 4
<param> will be passed as "\-\-param <param>" to iscsistart\&. This parameter can be specified multiple times\&. e\&.g\&.:
.sp
.if n \{\
.RS 4
.\}
.nf
"netroot=iscsi iscsi_firmware rd\&.iscsi\&.param=node\&.session\&.timeo\&.replacement_timeout=30"
.fi
.if n \{\
.RE
.\}
.sp
will result in
.sp
.if n \{\
.RS 4
.\}
.nf
iscsistart \-b \-\-param node\&.session\&.timeo\&.replacement_timeout=30
.fi
.if n \{\
.RE
.\}
.RE
.SS "FCoE"
.PP
\fBfcoe=\fR\fI<edd|interface|MAC>\fR:\fI{dcb|nodcb}\fR
.RS 4
Try to connect to a FCoE SAN through the NIC specified by
\fI<interface>\fR
or
\fI<MAC>\fR
or EDD settings\&. For the second argument, currently only nodcb is supported\&. This parameter can be specified multiple times\&. Note: letters in the MAC\-address must be lowercase!
.RE
.SS "NBD"
.PP
\fBroot=\fR??? \fBnetroot=\fRnbd:\fI<server>\fR:\fI<port>\fR[:\fI<fstype>\fR[:\fI<mountopts>\fR[:\fI<nbdopts>\fR]]]
.RS 4
mount nbd share from <server>
.RE
.PP
\fBroot=dhcp\fR with \fBdhcp\fR \fBroot\-path=\fRnbd:\fI<server>\fR:\fI<port>\fR[:\fI<fstype>\fR[:\fI<mountopts>\fR[:\fI<nbdopts>\fR]]]
.RS 4
root=dhcp alone directs initrd to look at the DHCP root\-path where NBD options can be specified\&. This syntax is only usable in cases where you are directly mounting the volume as the rootfs\&.
.RE
.SS "DASD"
.PP
\fBrd\&.dasd=\fR\&...\&.
.RS 4
same syntax as the kernel module parameter (s390 only)
.RE
.SS "ZFCP"
.PP
\fBrd\&.zfcp=\fR\fI<zfcp adaptor device bus ID>\fR,\fI<WWPN>\fR,\fI<FCPLUN>\fR
.RS 4
rd\&.zfcp can be specified multiple times on the kernel command line\&. e\&.g\&.:
.sp
.if n \{\
.RS 4
.\}
.nf
rd\&.zfcp=0\&.0\&.4000,0x5005076300C213e9,0x5022000000000000
.fi
.if n \{\
.RE
.\}
.RE
.PP
\fBrd\&.zfcp\&.conf=0\fR
.RS 4
ignore zfcp\&.conf included in the initramfs
.RE
.SS "ZNET"
.PP
\fBrd\&.znet=\fR\fI<nettype>\fR,\fI<subchannels>\fR,\fI<options>\fR
.RS 4
rd\&.znet can be specified multiple times on the kernel command line\&. e\&.g\&.:
.sp
.if n \{\
.RS 4
.\}
.nf
rd\&.znet=qeth,0\&.0\&.0600,0\&.0\&.0601,0\&.0\&.0602,layer2=1,portname=foo
rd\&.znet=ctc,0\&.0\&.0600,0\&.0\&.0601,0\&.0\&.0602,protocol=bar
.fi
.if n \{\
.RE
.\}
.RE
.SS "Plymouth Boot Splash"
.PP
\fBplymouth\&.enable=0\fR
.RS 4
disable the plymouth bootsplash completly\&.
.RE
.PP
\fBrd\&.plymouth=0\fR
.RS 4
disable the plymouth bootsplash only for the initramfs\&.
.RE
.SS "Kernel keys"
.PP
\fBmasterkey=\fR\fI<kernel master key path name>\fR
.RS 4
Set the path name of the kernel master key\&. e\&.g\&.:
.sp
.if n \{\
.RS 4
.\}
.nf
masterkey=/etc/keys/kmk\-trusted\&.blob
.fi
.if n \{\
.RE
.\}
.RE
.PP
\fBmasterkeytype=\fR\fI<kernel master key type>\fR
.RS 4
Set the type of the kernel master key\&. e\&.g\&.:
.sp
.if n \{\
.RS 4
.\}
.nf
masterkeytype=trusted
.fi
.if n \{\
.RE
.\}
.RE
.PP
\fBevmkey=\fR\fI<EVM key path name>\fR
.RS 4
Set the path name of the EVM key\&. e\&.g\&.:
.sp
.if n \{\
.RS 4
.\}
.nf
evmkey=/etc/keys/evm\-trusted\&.blob
.fi
.if n \{\
.RE
.\}
.RE
.PP
\fBecryptfskey=\fR\fI<eCryptfs key path name>\fR
.RS 4
Set the path name of the eCryptfs key\&. e\&.g\&.:
.sp
.if n \{\
.RS 4
.\}
.nf
ecryptfskey=/etc/keys/ecryptfs\-trusted\&.blob
.fi
.if n \{\
.RE
.\}
.RE
.SS "Deprecated, renamed Options"
.sp
Here is a list of options, which were used in dracut prior to version 008, and their new replacement\&.
.PP
rdbreak
.RS 4
rd\&.break
.RE
.PP
rd_CCW
.RS 4
rd\&.ccw
.RE
.PP
rd_DASD_MOD
.RS 4
rd\&.dasd
.RE
.PP
rd_DASD
.RS 4
rd\&.dasd
.RE
.PP
rdinitdebug rdnetdebug
.RS 4
rd\&.debug
.RE
.PP
rd_NO_DM
.RS 4
rd\&.dm=0
.RE
.PP
rd_DM_UUID
.RS 4
rd\&.dm\&.uuid
.RE
.PP
rdblacklist
.RS 4
rd\&.driver\&.blacklist
.RE
.PP
rdinsmodpost
.RS 4
rd\&.driver\&.post
.RE
.PP
rdloaddriver
.RS 4
rd\&.driver\&.pre
.RE
.PP
rd_NO_FSTAB
.RS 4
rd\&.fstab=0
.RE
.PP
rdinfo
.RS 4
rd\&.info
.RE
.PP
check
.RS 4
rd\&.live\&.check
.RE
.PP
rdlivedebug
.RS 4
rd\&.live\&.debug
.RE
.PP
live_dir
.RS 4
rd\&.live\&.dir
.RE
.PP
liveimg
.RS 4
rd\&.live\&.image
.RE
.PP
overlay
.RS 4
rd\&.live\&.overlay
.RE
.PP
readonly_overlay
.RS 4
rd\&.live\&.overlay\&.readonly
.RE
.PP
reset_overlay
.RS 4
rd\&.live\&.overlay\&.reset
.RE
.PP
live_ram
.RS 4
rd\&.live\&.ram
.RE
.PP
rd_NO_CRYPTTAB
.RS 4
rd\&.luks\&.crypttab=0
.RE
.PP
rd_LUKS_KEYDEV_UUID
.RS 4
rd\&.luks\&.keydev\&.uuid
.RE
.PP
rd_LUKS_KEYPATH
.RS 4
rd\&.luks\&.keypath
.RE
.PP
rd_NO_LUKS
.RS 4
rd\&.luks=0
.RE
.PP
rd_LUKS_UUID
.RS 4
rd\&.luks\&.uuid
.RE
.PP
rd_NO_LVMCONF
.RS 4
rd\&.lvm\&.conf
.RE
.PP
rd_LVM_LV
.RS 4
rd\&.lvm\&.lv
.RE
.PP
rd_NO_LVM
.RS 4
rd\&.lvm=0
.RE
.PP
rd_LVM_SNAPSHOT
.RS 4
rd\&.lvm\&.snapshot
.RE
.PP
rd_LVM_SNAPSIZE
.RS 4
rd\&.lvm\&.snapsize
.RE
.PP
rd_LVM_VG
.RS 4
rd\&.lvm\&.vg
.RE
.PP
rd_NO_MDADMCONF
.RS 4
rd\&.md\&.conf=0
.RE
.PP
rd_NO_MDIMSM
.RS 4
rd\&.md\&.imsm=0
.RE
.PP
rd_NO_MD
.RS 4
rd\&.md=0
.RE
.PP
rd_MD_UUID
.RS 4
rd\&.md\&.uuid
.RE
.PP
rd_NFS_DOMAIN
.RS 4
rd\&.nfs\&.domain
.RE
.PP
iscsi_initiator
.RS 4
rd\&.iscsi\&.initiator
.RE
.PP
iscsi_target_name
.RS 4
rd\&.iscsi\&.target\&.name
.RE
.PP
iscsi_target_ip
.RS 4
rd\&.iscsi\&.target\&.ip
.RE
.PP
iscsi_target_port
.RS 4
rd\&.iscsi\&.target\&.port
.RE
.PP
iscsi_target_group
.RS 4
rd\&.iscsi\&.target\&.group
.RE
.PP
iscsi_username
.RS 4
rd\&.iscsi\&.username
.RE
.PP
iscsi_password
.RS 4
rd\&.iscsi\&.password
.RE
.PP
iscsi_in_username
.RS 4
rd\&.iscsi\&.in\&.username
.RE
.PP
iscsi_in_password
.RS 4
rd\&.iscsi\&.in\&.password
.RE
.PP
iscsi_firmware
.RS 4
rd\&.iscsi\&.firmware=0
.RE
.PP
rd_NO_PLYMOUTH
.RS 4
rd\&.plymouth=0
.RE
.PP
rd_retry
.RS 4
rd\&.retry
.RE
.PP
rdshell
.RS 4
rd\&.shell
.RE
.PP
rd_NO_SPLASH
.RS 4
rd\&.splash
.RE
.PP
rdudevdebug
.RS 4
rd\&.udev\&.debug
.RE
.PP
rdudevinfo
.RS 4
rd\&.udev\&.info
.RE
.PP
rd_NO_ZFCPCONF
.RS 4
rd\&.zfcp\&.conf=0
.RE
.PP
rd_ZFCP
.RS 4
rd\&.zfcp
.RE
.PP
rd_ZNET
.RS 4
rd\&.znet
.RE
.PP
KEYMAP
.RS 4
vconsole\&.keymap
.RE
.PP
KEYTABLE
.RS 4
vconsole\&.keymap
.RE
.PP
SYSFONT
.RS 4
vconsole\&.font
.RE
.PP
CONTRANS
.RS 4
vconsole\&.font\&.map
.RE
.PP
UNIMAP
.RS 4
vconsole\&.font\&.unimap
.RE
.PP
UNICODE
.RS 4
vconsole\&.unicode
.RE
.PP
EXT_KEYMAP
.RS 4
vconsole\&.keymap\&.ext
.RE
.SS "Configuration in the Initramfs"
.PP
\fI/etc/conf\&.d/\fR
.RS 4
Any files found in
\fI/etc/conf\&.d/\fR
will be sourced in the initramfs to set initial values\&. Command line options will override these values set in the configuration files\&.
.RE
.PP
\fI/etc/cmdline\fR
.RS 4
Can contain additional command line options\&.
.RE
.PP
\fI/etc/cmdline\&.d/*\&.conf\fR
.RS 4
Can contain additional command line options\&.
.RE
.SH "AUTHOR"
.PP
\fBHarald Hoyer\fR
.RS 4
Project Leader and Developer
.RE
.SH "SEE ALSO"
.sp
\fBdracut\fR(8) \fBdracut\&.conf\fR(5)
.SH "NOTES"
.IP " 1." 4
rfc4173
.RS 4
\%http://tools.ietf.org/html/rfc4173#section-5
.RE
